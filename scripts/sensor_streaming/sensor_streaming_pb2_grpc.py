# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import  sensor_streaming_pb2 as sensor__streaming__pb2
#import sensor_streaming_pb2 as sensor__streaming__pb2


class SensorStreamingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamCameraSensor = channel.unary_unary(
        '/sensorstreaming.SensorStreaming/StreamCameraSensor',
        request_serializer=sensor__streaming__pb2.CameraStreamingRequest.SerializeToString,
        response_deserializer=sensor__streaming__pb2.CameraStreamingResponse.FromString,
        )
    self.StreamLidarSensor = channel.unary_unary(
        '/sensorstreaming.SensorStreaming/StreamLidarSensor',
        request_serializer=sensor__streaming__pb2.LidarStreamingRequest.SerializeToString,
        response_deserializer=sensor__streaming__pb2.LidarStreamingResponse.FromString,
        )
    self.StreamRadarSensor = channel.unary_unary(
        '/sensorstreaming.SensorStreaming/StreamRadarSensor',
        request_serializer=sensor__streaming__pb2.RadarStreamingRequest.SerializeToString,
        response_deserializer=sensor__streaming__pb2.RadarStreamingResponse.FromString,
        )


class SensorStreamingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StreamCameraSensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamLidarSensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamRadarSensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SensorStreamingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamCameraSensor': grpc.unary_unary_rpc_method_handler(
          servicer.StreamCameraSensor,
          request_deserializer=sensor__streaming__pb2.CameraStreamingRequest.FromString,
          response_serializer=sensor__streaming__pb2.CameraStreamingResponse.SerializeToString,
      ),
      'StreamLidarSensor': grpc.unary_unary_rpc_method_handler(
          servicer.StreamLidarSensor,
          request_deserializer=sensor__streaming__pb2.LidarStreamingRequest.FromString,
          response_serializer=sensor__streaming__pb2.LidarStreamingResponse.SerializeToString,
      ),
      'StreamRadarSensor': grpc.unary_unary_rpc_method_handler(
          servicer.StreamRadarSensor,
          request_deserializer=sensor__streaming__pb2.RadarStreamingRequest.FromString,
          response_serializer=sensor__streaming__pb2.RadarStreamingResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sensorstreaming.SensorStreaming', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
